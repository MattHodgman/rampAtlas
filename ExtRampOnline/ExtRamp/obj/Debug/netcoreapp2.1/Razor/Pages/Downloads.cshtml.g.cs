#pragma checksum "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "75372357b82f3a8b53799410e4085f58a2bf1cfa"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(ExtRamp.Pages.Pages_Downloads), @"mvc.1.0.razor-page", @"/Pages/Downloads.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Downloads.cshtml", typeof(ExtRamp.Pages.Pages_Downloads), null)]
namespace ExtRamp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\_ViewImports.cshtml"
using ExtRamp;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75372357b82f3a8b53799410e4085f58a2bf1cfa", @"/Pages/Downloads.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"76ede91916adb3e22c16f8d8bb61be53c76fd724", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Downloads : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
  
    ViewData["Title"] = "Downloads";
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(136, 37, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            EndContext();
            BeginContext(173, 2734, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0b679296472548428cb36d12362ae258", async() => {
                BeginContext(179, 2309, true);
                WriteLiteral(@"
    <title>Downloads</title>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">
    <link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Lato"">
    <link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Montserrat"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <style>
        body, h1, h2, h3, h4, h5, h6 {
            font-family: ""Lato"", sans-serif
        }

        .thick {
            background-size: 1px;
            border-top: 1px solid grey;
        }

        h1 {
            font-weight: bold;
        }

        .w3-bar, h1 {
            font-family: ""Montserrat"", sans-serif
        }

        .fa-anchor, .fa-coffee {
            font-size: 200px
        }

        * {
            box-sizing: border-box;
        }

        body {
      ");
                WriteLiteral(@"      /*font-family: Calibri*/
        }
        /* Style the header */
        header {
            /*background-color: #224E8A;*/
            padding: 30px;
            text-align: center;
            /*font-size: 35px;
              color: black;*/
        }

        /* Create two columns/boxes that floats next to each other */
        .column {
            float: left;
            /*background: #99BACC;*/
            padding: 20px;
            height: 120px;
        }

        /* Style the list inside the menu */
        nav ul {
            list-style-type: none;
            padding: 0;
        }

        .left {
            width: 40%;
            /*background-color: #fffff0;*/
        }

        .center {
            /*background-color: #E4EBF0;*/
            width: 60%;
        }

        .right {
            background-color: #E4EBF0;
            width: 75%;
        }


        /* Clear floats after the columns */
        section:after {
            content:");
                WriteLiteral(@" """";
            display: table;
            clear: both;
        }

        .files {
            flex: 1;
            display: block;
            justify-content: center;
            text-align: right;
            margin: auto;
        }

        ");
                EndContext();
                BeginContext(2489, 411, true);
                WriteLiteral(@"@media (max-width: 930px) {
            .stuff {
                flex-direction: column;
            }
            .files {
                flex: 1;
                display: block;
                justify-content: center;
                text-align: center;
                margin: auto;
                margin-top: 20px;
                margin-bottom: 20px;
            }
        }
    </style>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2907, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2909, 10727, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "458c84650971402aa5564513058e5b50", async() => {
                BeginContext(2915, 515, true);
                WriteLiteral(@"
    <div class=""w3-content w3-container w3-center"">
        <br />
        <h1>Downloads</h1>
        <br />
        <div style=""display:flex"">
            <div style=""flex:50%"">
                <button class=""w3-button w3-black w3-medium"" style=""text-decoration:none; border-radius: 10px; margin-left: 10px; margin-top:-3px; cursor: pointer;"" onclick=""window.location = 'https://ramps.byu.edu/SearchDatabase';"">&#8592; Back</button>
            </div>
            <div style=""flex:50%"">
                ");
                EndContext();
                BeginContext(3431, 224, false);
#line 127 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
           Write(Html.ActionLink("Download All", "DownloadFile1", new { file = "allExtRampData.tar.gz" }, new { @class = "w3-button w3-black w3-medium", style="text-decoration:none; border-radius: 10px; margin-left: 10px; margin-top:-3px" }));

#line default
#line hidden
                EndContext();
                BeginContext(3655, 1343, true);
                WriteLiteral(@"
            </div>
        </div>
        <br />
    </div>
    <br />
    <div class=""w3-content"">
        <div class=""w3-content w3-container"" style=""display:block"">
            <h3>Gene Expression Correlation</h3>
            <p><i>These data explain how ramp sequences correlate with gene expression (not detected, low, medium, high) within tissues and cell types. </i></p>
            <hr class=""thick""/>
            <div class=""stuff"" style=""display: flex"">
                <div style=""flex:1"">
                    <p><b>Ramp Count per Cell/Tissue by Gene Expression </b></p>
                    <p>
                        The number of ramps in every tissue/cell type spread by gene expression (not detected, low, medium, high) including a chi-squared analysis
                        for each tissue/cell type to test if ramps correlate with expression. These comma-separated files include the tissue/cell type, counts of ramps
                        by expression, counts of genes with no ramp b");
                WriteLiteral(@"y expression, total genes, percent of ramps, expected ramp counts by expression, expected ramps
                        subtracted from the observed counts, and a chi-squared p-value for each tissue/cell type.
                    </p>
                </div>
                <div class=""files"">
                    ");
                EndContext();
                BeginContext(4999, 152, false);
#line 149 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("rampCountPerCellByGeneExpression.csv", "DownloadFile1", new { file = "rampCountPerCellByGeneExpression.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(5151, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(5180, 156, false);
#line 150 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("rampCountPerTissueByGeneExpression.csv", "DownloadFile1", new { file = "rampCountPerTissueByGeneExpression.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(5336, 730, true);
                WriteLiteral(@"<br />
                </div>
            </div>

            <hr />

            <div class=""stuff"" style=""display: flex"">
                <div style=""flex:1"">
                    <p><b>Ramp Count per Gene by Gene Expression </b></p>
                    <p>
                        The number of ramps in every gene—based on either tissue or cell stratified RSCU values—spread by gene expression (not detected, low, medium, high).
                        These comma-separated files include the gene name, counts of ramps by expression, counts of genes with no ramp by expression, total ramps, and total genes
                    </p>
                </div>
                <div class=""files"">
                    ");
                EndContext();
                BeginContext(6067, 164, false);
#line 165 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("rampCountPerGeneByGeneExpressionTissue.csv", "DownloadFile1", new { file = "rampCountPerGeneByGeneExpressionTissue.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(6231, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(6260, 156, false);
#line 166 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("rampCountPerGeneByGeneExpression.csv", "DownloadFile1", new { file = "rampCountPerGeneByGeneExpressionCell.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(6416, 1112, true);
                WriteLiteral(@"<br />

                </div>
            </div>

            <hr />

            <div class=""stuff"" style=""display: flex"">
                <div style=""display:block;flex:1;"">
                    <p><b>Probability of Ramp Given Gene Expression </b></p>
                    <p>
                        The probability of a ramp given a gene expression (not detected, low, medium, high) for every gene based on either tissue or cell stratified RSCU values,
                        calculated using Bayes theorem. These comma-separated files include the gene name, probability of a ramp given each of the four levels of gene expression,
                        and a column to determine if the ramps correlate with higher expression (P(ramp|high expression) – weighted average (P(ramp|non detected expression) and
                        P(ramp|low expression)) given that the weighted average < P(ramp|medium expression) < high. Any gene not following this pattern was given a value of -1).
                   ");
                WriteLiteral(" </p>\r\n                </div>\r\n                <div class=\"files\">\r\n                    ");
                EndContext();
                BeginContext(7529, 156, false);
#line 184 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("probabilityRampGivenExpressionCell.csv", "DownloadFile1", new { file = "probabilityRampGivenExpressionCell.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(7685, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(7714, 160, false);
#line 185 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("probabilityRampGivenExpressionTissue.csv", "DownloadFile1", new { file = "probabilityRampGivenExpressionTissue.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(7874, 1203, true);
                WriteLiteral(@"<br />
                </div>
            </div>
        </div>
            <br /><br /><br />

        <div class=""w3-content w3-container"" style=""display:block"">
            <h3>Ramp Percentage Variation</h3>
            <p>
                <i>
                    These files contain pairwise chi-squared analyses between every tissue/cell type to test for different use of ramp sequences, as well as which tissues/cells
                    use of ramp sequences are most different from others.
                </i>
            </p>
            <hr class=""thick""/>
            <div class=""stuff"" style=""display: flex"">
                <div class=""w3-half"" style=""display:block"">
                    <p><b>Pairwise Chi-squared Test</b></p>
                    <p>
                        Pairwise chi-squared analyses between every tissue/cell type to test for different percentages of ramp sequences.
                        These comma-separated files include the names of the two tissues/cells being");
                WriteLiteral(" compared, a chi-squared test statistic, and a p-value per comparison.\r\n                    </p>\r\n                </div>\r\n                <div class=\"files\">\r\n                    ");
                EndContext();
                BeginContext(9078, 126, false);
#line 209 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("pairwiseChiTestCell.csv", "DownloadFile1", new { file = "pairwiseChiTestCell.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(9204, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(9233, 130, false);
#line 210 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("pairwiseChiTestTissue.csv", "DownloadFile1", new { file = "pairwiseChiTestTissue.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(9363, 981, true);
                WriteLiteral(@"<br />
                </div>
            </div>

            <hr />

            <div class=""stuff"" style=""display: flex"">
                <div class=""w3-half"" style=""display:block"">
                    <p><b>Percent Significant Chi-Squared Tests</b></p>
                    <p>
                        Which tissues/cells use of ramp sequences are most different from others, computed using the percent of significant pairwise
                        chi-squared tests confirming different ramp percentages. This comma-separated file includes the name of a tissue/cell type, the
                        total number of ramps in that tissue/cell type, the total number of genes, the number of pairwise tests in which it significantly
                        differed from another tissue, and that count of significant tests as a percent of total comparisons.
                    </p>
                </div>
                <div class=""files"">
                    ");
                EndContext();
                BeginContext(10345, 138, false);
#line 227 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("percentSignificantChiCell.csv", "DownloadFile1", new { file = "percentSignificantChiCell.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(10483, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(10512, 142, false);
#line 228 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("percentSignificantChiTissue.csv", "DownloadFile1", new { file = "percentSignificantChiTissue.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(10654, 1185, true);
                WriteLiteral(@"<br />
                </div>
            </div>
        </div>

        <br /><br /><br />

        <div class=""w3-content w3-container"" style=""display:block"">
            <h3>Ramp Presence</h3>
            <p>
                <i>
                    The total number of genes and genes with ramps for each tissue/cell type, including a chi squared analysis to determine if
                    across all tissues/cells there is a difference in ramp percentage.
                </i>
            </p>
            <hr class=""thick""/>
            <div class=""stuff"" style=""display: flex"">
                <div class=""w3-half"" style=""display:inline-block"">
                    <p><b>Ramps in Genes by Tissue/Cell Type</b></p>
                    <p>
                        All genes and whether of not they have a ramp for any given tissue/cell type. This comma-separated file includes an Ensembl gene identifier,
                        the name of a gene, a tissue type, a cell type, an expression level,");
                WriteLiteral(" a reliability score, and whether a ramp is present.\r\n                    </p>\r\n                </div>\r\n                <div class=\"files\">\r\n                    ");
                EndContext();
                BeginContext(11840, 132, false);
#line 253 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("rampsInGenesByCellType.csv", "DownloadFile1", new { file = "rampsInGenesByCellType.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(11972, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(12001, 136, false);
#line 254 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("rampsInGenesByTissueType.csv", "DownloadFile1", new { file = "rampsInGenesByTissueType.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(12137, 1086, true);
                WriteLiteral(@"<br />
                </div>
            </div>

            <hr />

            <div class=""stuff"" style=""display: flex"">
                <div class=""w3-half"" style=""display:block"">
                    <p><b>Total Genes and Ramps</b></p>
                    <p>
                        The total number of genes and ramps for each tissue/cell type, including a chi squared analysis to determine if across all
                        tissues/cells there is a difference in ramp percentage. This comma-separated file includes a tissue/cell type, the total number
                        of genes, the total ramps, the expected number of ramps based on an even distribution of ramps across all tissues/cells, and
                        observed minus expected number of ramps, and a chi-squared test statistic. Along the bottom are several column totals, the 
                        average percent of ramps across all tissues/cells, and the chi-squared p-value.
                    </p>
                </d");
                WriteLiteral("iv>\r\n                <div class=\"files\">\r\n                    ");
                EndContext();
                BeginContext(13224, 132, false);
#line 272 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("totalGenesAndRampsCell.csv", "DownloadFile1", new { file = "totalGenesAndRampsCell.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(13356, 28, true);
                WriteLiteral("<br />\r\n                    ");
                EndContext();
                BeginContext(13385, 136, false);
#line 273 "C:\Users\matthodg\source\repos\ExtRamp_ASP.Net\ExtRamp_ASP.Net\ExtRamp\ExtRamp\Pages\Downloads.cshtml"
               Write(Html.ActionLink("totalGenesAndRampsTissue.csv", "DownloadFile1", new { file = "totalGenesAndRampsTissue.csv" }, new { @class = "link" }));

#line default
#line hidden
                EndContext();
                BeginContext(13521, 108, true);
                WriteLiteral("<br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br /><br /><br />\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13636, 15, true);
            WriteLiteral("\r\n</html>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ExtRamp.Pages.DownloadsModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ExtRamp.Pages.DownloadsModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ExtRamp.Pages.DownloadsModel>)PageContext?.ViewData;
        public ExtRamp.Pages.DownloadsModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
